name: Node.js CI
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: c-hive/gha-npm-cache@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag Build
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          # Only tag with latest if we're on main
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deployment:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/feature/actions'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to branch
        uses: actions/checkout@v3

      - name: Tag Build
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha

      - name: Create build context for k8s deployment
        # There should only be 1 tag, so 'join' will just produce a simple string
        run: |
          touch k8s-context
          echo IMAGE=${{ join(steps.meta.outputs.tags, '') }} > k8s-context
          cat k8s-context

      - name: Set up kubectl
        uses: matootie/dokube@v1.4.0
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: k8s-rf

      - name: Deploy app
        run: |
          kubectl diff -k . || echo \n
          kubectl delete secret modbot-env || echo \n
          kubectl create secret generic modbot-env \
            --from-literal=SESSION_SECRET=${{ secrets.SESSION_SECRET }} \
            --from-literal=DISCORD_PUBLIC_KEY=${{ secrets.DISCORD_PUBLIC_KEY }} \
            --from-literal=DISCORD_APP_ID=${{ secrets.DISCORD_APP_ID }} \
            --from-literal=DISCORD_SECRET=${{ secrets.DISCORD_SECRET }} \
            --from-literal=DISCORD_HASH=${{ secrets.DISCORD_HASH }}
          kubectl apply -k .
# from remix template app
# name: 🚀 Deploy
# on:
#   push:
#     branches:
#       - main
#       - dev
#   pull_request: {}

# jobs:
#   lint:
#     name: ⬣ ESLint
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.9.1

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: ⎔ Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - name: 📥 Download deps
#         uses: bahmutov/npm-install@v1

#       - name: 🔬 Lint
#         run: npm run lint

#   typecheck:
#     name: ʦ TypeScript
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.9.1

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: ⎔ Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - name: 📥 Download deps
#         uses: bahmutov/npm-install@v1

#       - name: 🔎 Type check
#         run: npm run typecheck --if-present

#   vitest:
#     name: ⚡ Vitest
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.9.1

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: ⎔ Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - name: 📥 Download deps
#         uses: bahmutov/npm-install@v1

#       - name: ⚡ Run vitest
#         run: npm run test -- --coverage

#   cypress:
#     name: ⚫️ Cypress
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.9.1

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: 🏄 Copy test env vars
#         run: cp .env.example .env

#       - name: ⎔ Setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16

#       - name: 📥 Download deps
#         uses: bahmutov/npm-install@v1

#       - name: 🛠 Setup Database
#         run: npx prisma migrate reset --force

#       - name: ⚙️ Build
#         run: npm run build

#       - name: 🌳 Cypress run
#         uses: cypress-io/github-action@v3
#         with:
#           start: npm run start:mocks
#           wait-on: "http://localhost:8811"
#         env:
#           PORT: "8811"

#   build:
#     name: 🐳 Build
#     # only build/deploy main branch on pushes
#     if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.9.1

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: 👀 Read app name
#         uses: SebRollen/toml-action@v1.0.0
#         id: app_name
#         with:
#           file: "fly.toml"
#           field: "app"

#       - name: 🐳 Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       # Setup cache
#       - name: ⚡️ Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: 🔑 Fly Registry Auth
#         uses: docker/login-action@v1
#         with:
#           registry: registry.fly.io
#           username: x
#           password: ${{ secrets.FLY_API_TOKEN }}

#       - name: 🐳 Docker build
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: true
#           tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
#           build-args: |
#             COMMIT_SHA=${{ github.sha }}
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

#       # This ugly bit is necessary if you don't want your cache to grow forever
#       # till it hits GitHub's limit of 5GB.
#       # Temp fix
#       # https://github.com/docker/build-push-action/issues/252
#       # https://github.com/moby/buildkit/issues/1896
#       - name: 🚚 Move cache
#         run: |
#           rm -rf /tmp/.buildx-cache
#           mv /tmp/.buildx-cache-new /tmp/.buildx-cache

#   deploy:
#     name: 🚀 Deploy
#     runs-on: ubuntu-latest
#     needs: [lint, typecheck, vitest, cypress, build]
#     # only build/deploy main branch on pushes
#     if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

#     steps:
#       - name: 🛑 Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.9.1

#       - name: ⬇️ Checkout repo
#         uses: actions/checkout@v3

#       - name: 👀 Read app name
#         uses: SebRollen/toml-action@v1.0.0
#         id: app_name
#         with:
#           file: "fly.toml"
#           field: "app"

#       - name: 🚀 Deploy Staging
#         if: ${{ github.ref == 'refs/heads/dev' }}
#         uses: superfly/flyctl-actions@1.3
#         with:
#           args: "deploy --app ${{ steps.app_name.outputs.value }}-staging --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
#         env:
#           FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

#       - name: 🚀 Deploy Production
#         if: ${{ github.ref == 'refs/heads/main' }}
#         uses: superfly/flyctl-actions@1.3
#         with:
#           args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
#         env:
#           FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
